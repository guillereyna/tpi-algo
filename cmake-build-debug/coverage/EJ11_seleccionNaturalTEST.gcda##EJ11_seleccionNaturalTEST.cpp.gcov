        -:    0:Source:/cygdrive/d/Universidad/Algoritmos y Estructuras de Datos I/TPI/TPI-template/TPI-toroide/tests/EJ11_seleccionNaturalTEST.cpp
        -:    0:Graph:/cygdrive/d/Universidad/Algoritmos y Estructuras de Datos I/TPI/TPI-template/TPI-toroide/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ11_seleccionNaturalTEST.gcno
        -:    0:Data:/cygdrive/d/Universidad/Algoritmos y Estructuras de Datos I/TPI/TPI-template/TPI-toroide/cmake-build-debug/CMakeFiles/juegoDeLaVida.dir/tests/EJ11_seleccionNaturalTEST.gcda
        -:    0:Runs:1
        -:    1:#include "../ejercicios.h"
        -:    2:#include "gtest/gtest.h"
        -:    3:#include <algorithm>
        -:    4:
        -:    5:using namespace std;
        -:    6:
        -:    7:
        2:    8:TEST(seleccionNaturalTEST, toroideDiagonalVsUnoVivo){
        -:    9:    toroide t1 = { 
        -:   10:                  {true, false, false},
        -:   11:                  {false, true, false},
        7:   12:                  {false, false, true}}; 
        -:   13:    toroide t2 = { 
        -:   14:                  {false, false, false}, 
        -:   15:                  {false, false, false}, 
        -:   16:                  {false, true, false},
        -:   17:                  {false, false, false}, 
        9:   18:                  {false, false, false}};
        2:   19:    vector<toroide> ts;
        1:   20:    ts.push_back(t1);
        1:   21:    ts.push_back(t2);
        1:   22:    ts.push_back(t2);
        1:   23:    int res = seleccionNatural(ts);
       1*:   24:    EXPECT_EQ(res, 0);
        1:   25:}
------------------
_ZN50seleccionNaturalTEST_toroideDiagonalVsUnoVivo_Test8TestBodyEv:
        1:    8:TEST(seleccionNaturalTEST, toroideDiagonalVsUnoVivo){
        -:    9:    toroide t1 = { 
        -:   10:                  {true, false, false},
        -:   11:                  {false, true, false},
        7:   12:                  {false, false, true}}; 
        1:   12-block  0
        1:   12-block  1
        1:   12-block  2
        1:   12-block  3
        3:   12-block  4
        1:   12-block  5
    $$$$$:   12-block  6
    $$$$$:   12-block  7
    $$$$$:   12-block  8
    $$$$$:   12-block  9
    $$$$$:   12-block 10
    $$$$$:   12-block 11
    $$$$$:   12-block 12
        -:   13:    toroide t2 = { 
        -:   14:                  {false, false, false}, 
        -:   15:                  {false, false, false}, 
        -:   16:                  {false, true, false},
        -:   17:                  {false, false, false}, 
        9:   18:                  {false, false, false}};
        1:   18-block  0
        1:   18-block  1
        1:   18-block  2
        1:   18-block  3
        1:   18-block  4
        5:   18-block  5
        1:   18-block  6
    $$$$$:   18-block  7
    $$$$$:   18-block  8
    $$$$$:   18-block  9
    $$$$$:   18-block 10
    $$$$$:   18-block 11
    $$$$$:   18-block 12
    $$$$$:   18-block 13
    $$$$$:   18-block 14
    $$$$$:   18-block 15
        2:   19:    vector<toroide> ts;
    $$$$$:   19-block  0
        1:   20:    ts.push_back(t1);
        1:   21:    ts.push_back(t2);
        1:   21-block  0
        1:   22:    ts.push_back(t2);
        1:   22-block  0
        1:   23:    int res = seleccionNatural(ts);
        1:   23-block  0
        1:   23-block  1
        1:   23-block  2
    $$$$$:   23-block  3
    $$$$$:   23-block  4
       1*:   24:    EXPECT_EQ(res, 0);
        1:   24-block  0
    %%%%%:   24-block  1
    %%%%%:   24-block  2
    %%%%%:   24-block  3
    %%%%%:   24-block  4
    %%%%%:   24-block  5
        1:   24-block  6
    $$$$$:   24-block  7
    $$$$$:   24-block  8
    $$$$$:   24-block  9
    $$$$$:   24-block 10
    $$$$$:   24-block 11
    $$$$$:   24-block 12
        1:   25:}
------------------
_ZN50seleccionNaturalTEST_toroideDiagonalVsUnoVivo_TestC1Ev:
        1:    8:TEST(seleccionNaturalTEST, toroideDiagonalVsUnoVivo){
        1:    8-block  0
------------------
        -:   26:/*
        -:   27:TEST(seleccionNaturalTEST, DiagonalVsHorizontal){
        -:   28:    toroide t1 = { 
        -:   29:                  {false, false, false, false, false}, 
        -:   30:                  {false, false, false, false, false}, 
        -:   31:                  {false, true, true, true, false},
        -:   32:                  {false, false, false, false, false}, 
        -:   33:                  {false, false,false, false, false} };
        -:   34:    toroide t2 = { 
        -:   35:                  {true, false, false},
        -:   36:                  {false, true, false},
        -:   37:                  {false, false, true}}; 
        -:   38:    vector<toroide> ts;
        -:   39:    ts.push_back(t2);
        -:   40:    ts.push_back(t1);
        -:   41:    ts.push_back(t2);
        -:   42:    int res = seleccionNatural(ts);
        -:   43:    EXPECT_EQ(res, 1);
        -:   44:}
        -:   45:*/
